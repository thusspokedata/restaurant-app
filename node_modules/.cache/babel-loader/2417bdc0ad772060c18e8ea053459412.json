{"ast":null,"code":"'use strict';\n\nvar _require = require('./errors'),\n    NoVideoInputDevicesError = _require.NoVideoInputDevicesError;\n\nfunction defaultDeviceIdChooser(filteredDevices, videoDevices, facingMode) {\n  if (filteredDevices.length > 0) {\n    return filteredDevices[0].deviceId;\n  }\n\n  if (videoDevices.length == 1 || facingMode == 'user') {\n    return videoDevices[0].deviceId;\n  }\n\n  return videoDevices[1].deviceId;\n}\n\nvar getFacingModePattern = function getFacingModePattern(facingMode) {\n  return facingMode == 'environment' ? /rear|back|environment/ig : /front|user|face/ig;\n};\n\nfunction getDeviceId(facingMode) {\n  var chooseDeviceId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultDeviceIdChooser; // Get manual deviceId from available devices.\n\n  return new Promise(function (resolve, reject) {\n    var enumerateDevices = void 0;\n\n    try {\n      enumerateDevices = navigator.mediaDevices.enumerateDevices();\n    } catch (err) {\n      reject(new NoVideoInputDevicesError());\n    }\n\n    enumerateDevices.then(function (devices) {\n      // Filter out non-videoinputs\n      var videoDevices = devices.filter(function (device) {\n        return device.kind == 'videoinput';\n      });\n\n      if (videoDevices.length < 1) {\n        reject(new NoVideoInputDevicesError());\n        return;\n      }\n\n      var pattern = getFacingModePattern(facingMode); // Filter out video devices without the pattern\n\n      var filteredDevices = videoDevices.filter(function (_ref) {\n        var label = _ref.label;\n        return pattern.test(label);\n      });\n      resolve(chooseDeviceId(filteredDevices, videoDevices, facingMode));\n    });\n  });\n}\n\nmodule.exports = {\n  getDeviceId: getDeviceId,\n  getFacingModePattern: getFacingModePattern\n};","map":{"version":3,"names":["_require","require","NoVideoInputDevicesError","defaultDeviceIdChooser","filteredDevices","videoDevices","facingMode","length","deviceId","getFacingModePattern","getDeviceId","chooseDeviceId","arguments","undefined","Promise","resolve","reject","enumerateDevices","navigator","mediaDevices","err","then","devices","filter","device","kind","pattern","_ref","label","test","module","exports"],"sources":["/Users/kilo/Ironhack-web-dev-final-project/client/node_modules/react-qr-reader/lib/getDeviceId.js"],"sourcesContent":["'use strict';\n\nvar _require = require('./errors'),\n    NoVideoInputDevicesError = _require.NoVideoInputDevicesError;\n\nfunction defaultDeviceIdChooser(filteredDevices, videoDevices, facingMode) {\n  if (filteredDevices.length > 0) {\n    return filteredDevices[0].deviceId;\n  }\n  if (videoDevices.length == 1 || facingMode == 'user') {\n    return videoDevices[0].deviceId;\n  }\n  return videoDevices[1].deviceId;\n}\n\nvar getFacingModePattern = function getFacingModePattern(facingMode) {\n  return facingMode == 'environment' ? /rear|back|environment/ig : /front|user|face/ig;\n};\n\nfunction getDeviceId(facingMode) {\n  var chooseDeviceId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultDeviceIdChooser;\n\n  // Get manual deviceId from available devices.\n  return new Promise(function (resolve, reject) {\n    var enumerateDevices = void 0;\n    try {\n      enumerateDevices = navigator.mediaDevices.enumerateDevices();\n    } catch (err) {\n      reject(new NoVideoInputDevicesError());\n    }\n    enumerateDevices.then(function (devices) {\n      // Filter out non-videoinputs\n      var videoDevices = devices.filter(function (device) {\n        return device.kind == 'videoinput';\n      });\n\n      if (videoDevices.length < 1) {\n        reject(new NoVideoInputDevicesError());\n        return;\n      }\n\n      var pattern = getFacingModePattern(facingMode);\n\n      // Filter out video devices without the pattern\n      var filteredDevices = videoDevices.filter(function (_ref) {\n        var label = _ref.label;\n        return pattern.test(label);\n      });\n\n      resolve(chooseDeviceId(filteredDevices, videoDevices, facingMode));\n    });\n  });\n}\n\nmodule.exports = { getDeviceId: getDeviceId, getFacingModePattern: getFacingModePattern };"],"mappings":"AAAA;;AAEA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;AAAA,IACIC,wBAAwB,GAAGF,QAAQ,CAACE,wBADxC;;AAGA,SAASC,sBAAT,CAAgCC,eAAhC,EAAiDC,YAAjD,EAA+DC,UAA/D,EAA2E;EACzE,IAAIF,eAAe,CAACG,MAAhB,GAAyB,CAA7B,EAAgC;IAC9B,OAAOH,eAAe,CAAC,CAAD,CAAf,CAAmBI,QAA1B;EACD;;EACD,IAAIH,YAAY,CAACE,MAAb,IAAuB,CAAvB,IAA4BD,UAAU,IAAI,MAA9C,EAAsD;IACpD,OAAOD,YAAY,CAAC,CAAD,CAAZ,CAAgBG,QAAvB;EACD;;EACD,OAAOH,YAAY,CAAC,CAAD,CAAZ,CAAgBG,QAAvB;AACD;;AAED,IAAIC,oBAAoB,GAAG,SAASA,oBAAT,CAA8BH,UAA9B,EAA0C;EACnE,OAAOA,UAAU,IAAI,aAAd,GAA8B,yBAA9B,GAA0D,mBAAjE;AACD,CAFD;;AAIA,SAASI,WAAT,CAAqBJ,UAArB,EAAiC;EAC/B,IAAIK,cAAc,GAAGC,SAAS,CAACL,MAAV,GAAmB,CAAnB,IAAwBK,SAAS,CAAC,CAAD,CAAT,KAAiBC,SAAzC,GAAqDD,SAAS,CAAC,CAAD,CAA9D,GAAoET,sBAAzF,CAD+B,CAG/B;;EACA,OAAO,IAAIW,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;IAC5C,IAAIC,gBAAgB,GAAG,KAAK,CAA5B;;IACA,IAAI;MACFA,gBAAgB,GAAGC,SAAS,CAACC,YAAV,CAAuBF,gBAAvB,EAAnB;IACD,CAFD,CAEE,OAAOG,GAAP,EAAY;MACZJ,MAAM,CAAC,IAAId,wBAAJ,EAAD,CAAN;IACD;;IACDe,gBAAgB,CAACI,IAAjB,CAAsB,UAAUC,OAAV,EAAmB;MACvC;MACA,IAAIjB,YAAY,GAAGiB,OAAO,CAACC,MAAR,CAAe,UAAUC,MAAV,EAAkB;QAClD,OAAOA,MAAM,CAACC,IAAP,IAAe,YAAtB;MACD,CAFkB,CAAnB;;MAIA,IAAIpB,YAAY,CAACE,MAAb,GAAsB,CAA1B,EAA6B;QAC3BS,MAAM,CAAC,IAAId,wBAAJ,EAAD,CAAN;QACA;MACD;;MAED,IAAIwB,OAAO,GAAGjB,oBAAoB,CAACH,UAAD,CAAlC,CAXuC,CAavC;;MACA,IAAIF,eAAe,GAAGC,YAAY,CAACkB,MAAb,CAAoB,UAAUI,IAAV,EAAgB;QACxD,IAAIC,KAAK,GAAGD,IAAI,CAACC,KAAjB;QACA,OAAOF,OAAO,CAACG,IAAR,CAAaD,KAAb,CAAP;MACD,CAHqB,CAAtB;MAKAb,OAAO,CAACJ,cAAc,CAACP,eAAD,EAAkBC,YAAlB,EAAgCC,UAAhC,CAAf,CAAP;IACD,CApBD;EAqBD,CA5BM,CAAP;AA6BD;;AAEDwB,MAAM,CAACC,OAAP,GAAiB;EAAErB,WAAW,EAAEA,WAAf;EAA4BD,oBAAoB,EAAEA;AAAlD,CAAjB"},"metadata":{},"sourceType":"script"}