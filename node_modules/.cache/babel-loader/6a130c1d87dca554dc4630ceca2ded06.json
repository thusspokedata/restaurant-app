{"ast":null,"code":"var _jsxFileName = \"/Users/kilo/Ironhack-web-dev-final-project/client/src/components/QRCustomer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { QrReader } from \"react-qr-reader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction QrReaderF(props) {\n  _s();\n\n  const [data, setData] = useState(\"No result\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(QrReader, {\n      onResult: (result, error) => {\n        if (!!result) {\n          setData(result === null || result === void 0 ? void 0 : result.text);\n        }\n\n        if (!!error) {\n          console.info(error);\n        }\n      },\n      style: {\n        width: \"100%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(QrReaderF, \"dmPFwrOsvHW3b4sogji5iMpClo0=\");\n\n_c = QrReaderF;\nexport default QrReaderF;\n\nvar _c;\n\n$RefreshReg$(_c, \"QrReaderF\");","map":{"version":3,"names":["React","useState","QrReader","QrReaderF","props","data","setData","result","error","text","console","info","width"],"sources":["/Users/kilo/Ironhack-web-dev-final-project/client/src/components/QRCustomer.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { QrReader } from \"react-qr-reader\";\n\nfunction QrReaderF(props) {\n  const [data, setData] = useState(\"No result\");\n  return (\n    <>\n      <QrReader\n        onResult={(result, error) => {\n          if (!!result) {\n            setData(result?.text);\n          }\n\n          if (!!error) {\n            console.info(error);\n          }\n        }}\n        style={{ width: \"100%\" }}\n      />\n      <p>{data}</p>\n    </>\n  );\n}\n\nexport default QrReaderF;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,iBAAzB;;;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;EAAA;;EACxB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,WAAD,CAAhC;EACA,oBACE;IAAA,wBACE,QAAC,QAAD;MACE,QAAQ,EAAE,CAACM,MAAD,EAASC,KAAT,KAAmB;QAC3B,IAAI,CAAC,CAACD,MAAN,EAAc;UACZD,OAAO,CAACC,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAEE,IAAT,CAAP;QACD;;QAED,IAAI,CAAC,CAACD,KAAN,EAAa;UACXE,OAAO,CAACC,IAAR,CAAaH,KAAb;QACD;MACF,CATH;MAUE,KAAK,EAAE;QAAEI,KAAK,EAAE;MAAT;IAVT;MAAA;MAAA;MAAA;IAAA,QADF,eAaE;MAAA,UAAIP;IAAJ;MAAA;MAAA;MAAA;IAAA,QAbF;EAAA,gBADF;AAiBD;;GAnBQF,S;;KAAAA,S;AAqBT,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}